name: CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-linux-x64:
    name: Build Linux x64
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Update apt cache
        run: sudo apt-get -o Acquire::Retries=3 update

      - name: Install build dependencies
        run: |
          sudo apt-get -o Acquire::Retries=3 install \
            cmake g++ git mesa-common-dev libgl1-mesa-dev libgl1 libglx-mesa0 libxext-dev \
            libgtk-3-dev dpkg-dev file

      - name: Configure TreeSheets
        run: |
          cmake -S . -B _build \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DCPACK_PACKAGING_INSTALL_PREFIX=/usr \
            -DCMAKE_BUILD_TYPE=Release \
            -DGIT_WXWIDGETS_SUBMODULES=ON \
            -DwxUSE_SYS_LIBS=OFF

      - name: Build TreeSheets
        run: cmake --build _build --target all -j4

      - name: Run tests
        run: ctest --test-dir _build --output-on-failure

      - name: Package TreeSheets
        run: cmake --build _build --target package -j4

      - name: Remove epoch from .deb filename
        run: |
          shopt -s nullglob
          for file in _build/treesheets_1:*.deb; do
            mv -v "${file}" "${file/treesheets_1:/treesheets_}"
          done

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-x64-builds
          path: _build/treesheets_*.deb

  build-linux-arm64:
    name: Build Linux ARM64
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build in ARM64 Debian Bullseye container
        run: |
          docker run --rm --platform linux/arm64 \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            arm64v8/debian:bullseye \
            bash -c "set -euo pipefail && \
              apt-get update && \
              DEBIAN_FRONTEND=noninteractive apt-get install -y \
                cmake g++ git mesa-common-dev libgl1-mesa-dev libgl1 libglx-mesa0 libxext-dev \
                libgtk-3-dev dpkg-dev file && \
              cmake -S . -B _build \
                -DCMAKE_INSTALL_PREFIX=/usr \
                -DCPACK_PACKAGING_INSTALL_PREFIX=/usr \
                -DCMAKE_BUILD_TYPE=Release \
                -DGIT_WXWIDGETS_SUBMODULES=ON \
                -DwxUSE_SYS_LIBS=OFF && \
              cmake --build _build --target all -j4 && \
              ctest --test-dir _build --output-on-failure && \
              cmake --build _build --target package -j4"

      - name: Remove epoch from .deb filename
        run: |
          shopt -s nullglob
          for file in _build/treesheets_1:*.deb; do
            mv -v "${file}" "${file/treesheets_1:/treesheets_}"
          done

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-arm64-builds
          path: _build/treesheets_*.deb

  build-windows:
    name: Build Windows x64
    runs-on: windows-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Configure TreeSheets
        run: cmake -S . -B _build -DCMAKE_BUILD_TYPE=Release -DGIT_WXWIDGETS_SUBMODULES=ON

      - name: Build TreeSheets
        run: cmake --build _build --config Release --target ALL_BUILD -j

      - name: Run tests
        run: ctest --test-dir _build --output-on-failure -C Release

      - name: Package TreeSheets
        run: cmake --build _build --config Release --target package -j

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-builds
          path: |
            _build/TreeSheets-*.exe
            _build/TreeSheets-*.zip

  publish-release:
    name: Publish release
    needs:
      - build-linux-x64
      - build-linux-arm64
      - build-windows
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Download Linux x64 artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-x64-builds
          path: release/linux-x64

      - name: Download Linux ARM64 artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-arm64-builds
          path: release/linux-arm64

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-builds
          path: release/windows

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: build-${{ github.run_id }}
          name: TreeSheets build ${{ github.run_id }}
          body: "Automated build for commit ${{ github.sha }}"
          allowUpdates: true
          commit: ${{ github.sha }}
          artifacts: |
            release/linux-x64/treesheets_*.deb
            release/linux-arm64/treesheets_*.deb
            release/windows/TreeSheets-*.exe
            release/windows/TreeSheets-*.zip
